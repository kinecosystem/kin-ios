// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: account/v4/account_service.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class APBAccountV4AccountInfo;
@class APBAccountV4AccountUpdateEvent;
@class APBAccountV4Event;
@class APBAccountV4TransactionEvent;
@class APBCommonV4SolanaAccountId;
@class APBCommonV4Transaction;
@class APBCommonV4TransactionError;
GPB_ENUM_FWD_DECLARE(APBCommonV4Commitment);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum APBAccountV4CreateAccountResponse_Result

typedef GPB_ENUM(APBAccountV4CreateAccountResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  APBAccountV4CreateAccountResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  APBAccountV4CreateAccountResponse_Result_Ok = 0,
  APBAccountV4CreateAccountResponse_Result_Exists = 1,

  /**
   * Indicates that the service will not subsidize the transaction, and that
   * the caller should fund the transaction themselves.
   **/
  APBAccountV4CreateAccountResponse_Result_PayerRequired = 2,

  /**
   * Indicates the nonce/blockhash used in the transaction is invalid, and should
   * be refetched
   **/
  APBAccountV4CreateAccountResponse_Result_BadNonce = 3,
};

GPBEnumDescriptor *APBAccountV4CreateAccountResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL APBAccountV4CreateAccountResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum APBAccountV4GetAccountInfoResponse_Result

typedef GPB_ENUM(APBAccountV4GetAccountInfoResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  APBAccountV4GetAccountInfoResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  APBAccountV4GetAccountInfoResponse_Result_Ok = 0,

  /** The specified account could not be found. */
  APBAccountV4GetAccountInfoResponse_Result_NotFound = 1,
};

GPBEnumDescriptor *APBAccountV4GetAccountInfoResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL APBAccountV4GetAccountInfoResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum APBAccountV4Events_Result

typedef GPB_ENUM(APBAccountV4Events_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  APBAccountV4Events_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  APBAccountV4Events_Result_Ok = 0,

  /** The specified account could not be found. */
  APBAccountV4Events_Result_NotFound = 1,
};

GPBEnumDescriptor *APBAccountV4Events_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL APBAccountV4Events_Result_IsValidValue(int32_t value);

#pragma mark - APBAccountV4AccountServiceRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface APBAccountV4AccountServiceRoot : GPBRootObject
@end

#pragma mark - APBAccountV4AccountInfo

typedef GPB_ENUM(APBAccountV4AccountInfo_FieldNumber) {
  APBAccountV4AccountInfo_FieldNumber_AccountId = 1,
  APBAccountV4AccountInfo_FieldNumber_Balance = 2,
  APBAccountV4AccountInfo_FieldNumber_Owner = 3,
  APBAccountV4AccountInfo_FieldNumber_CloseAuthority = 4,
};

@interface APBAccountV4AccountInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) APBCommonV4SolanaAccountId *accountId;
/** Test to see if @c accountId has been set. */
@property(nonatomic, readwrite) BOOL hasAccountId;

/** The last known balance, in quarks, of the account. */
@property(nonatomic, readwrite) int64_t balance;

@property(nonatomic, readwrite, strong, null_resettable) APBCommonV4SolanaAccountId *owner;
/** Test to see if @c owner has been set. */
@property(nonatomic, readwrite) BOOL hasOwner;

@property(nonatomic, readwrite, strong, null_resettable) APBCommonV4SolanaAccountId *closeAuthority;
/** Test to see if @c closeAuthority has been set. */
@property(nonatomic, readwrite) BOOL hasCloseAuthority;

@end

#pragma mark - APBAccountV4CreateAccountRequest

typedef GPB_ENUM(APBAccountV4CreateAccountRequest_FieldNumber) {
  APBAccountV4CreateAccountRequest_FieldNumber_Transaction = 1,
  APBAccountV4CreateAccountRequest_FieldNumber_Commitment = 2,
};

@interface APBAccountV4CreateAccountRequest : GPBMessage

/**
 * CreateAccountRequest should be of one of the following forms:
 *   Legacy:
 *     1. [Optional] Memo::Memo()
 *     2. SystemProgram::CreateAccount()
 *     3. SplTokenProgram::InitializeAccount()
 *     4. [Optional] SplTokenProgram::SetAuthority()
 *   Standard:
 *     1. [Optional] Memo::Memo()
 *     2. SplAssociateTokenAccount::CreateAssociatedTokenAccount()
 *     3. [Optional] SplTokenProgram::SetAuthority()
 *
 * The SetAuthority() instruction only needs to be set if the service is
 * subsidizing the account creation. In that case, a SetAuthority()
 * instruction must be included that sets the CloseAuthority of
 * the account to the subsidizer. This is to prevent the farming of Sol
 * by creating accounts. It should be noted that an account can only
 * be closed if there is zero kin in the account.
 *
 * An optional memo may be provided to attribute the account
 * creation with an app index. This may be used for the KRE.
 * The memo type should be NONE.
 *
 * If the parameters are not for the Kin token, or there are
 * any other instructions, InvalidArgument will be returned.
 **/
@property(nonatomic, readwrite, strong, null_resettable) APBCommonV4Transaction *transaction;
/** Test to see if @c transaction has been set. */
@property(nonatomic, readwrite) BOOL hasTransaction;

@property(nonatomic, readwrite) enum APBCommonV4Commitment commitment;

@end

/**
 * Fetches the raw value of a @c APBAccountV4CreateAccountRequest's @c commitment property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t APBAccountV4CreateAccountRequest_Commitment_RawValue(APBAccountV4CreateAccountRequest *message);
/**
 * Sets the raw value of an @c APBAccountV4CreateAccountRequest's @c commitment property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAPBAccountV4CreateAccountRequest_Commitment_RawValue(APBAccountV4CreateAccountRequest *message, int32_t value);

#pragma mark - APBAccountV4CreateAccountResponse

typedef GPB_ENUM(APBAccountV4CreateAccountResponse_FieldNumber) {
  APBAccountV4CreateAccountResponse_FieldNumber_Result = 1,
  APBAccountV4CreateAccountResponse_FieldNumber_AccountInfo = 2,
};

@interface APBAccountV4CreateAccountResponse : GPBMessage

@property(nonatomic, readwrite) APBAccountV4CreateAccountResponse_Result result;

/** Present iff the account was created or already existed. */
@property(nonatomic, readwrite, strong, null_resettable) APBAccountV4AccountInfo *accountInfo;
/** Test to see if @c accountInfo has been set. */
@property(nonatomic, readwrite) BOOL hasAccountInfo;

@end

/**
 * Fetches the raw value of a @c APBAccountV4CreateAccountResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t APBAccountV4CreateAccountResponse_Result_RawValue(APBAccountV4CreateAccountResponse *message);
/**
 * Sets the raw value of an @c APBAccountV4CreateAccountResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAPBAccountV4CreateAccountResponse_Result_RawValue(APBAccountV4CreateAccountResponse *message, int32_t value);

#pragma mark - APBAccountV4GetAccountInfoRequest

typedef GPB_ENUM(APBAccountV4GetAccountInfoRequest_FieldNumber) {
  APBAccountV4GetAccountInfoRequest_FieldNumber_AccountId = 1,
  APBAccountV4GetAccountInfoRequest_FieldNumber_Commitment = 2,
};

@interface APBAccountV4GetAccountInfoRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) APBCommonV4SolanaAccountId *accountId;
/** Test to see if @c accountId has been set. */
@property(nonatomic, readwrite) BOOL hasAccountId;

@property(nonatomic, readwrite) enum APBCommonV4Commitment commitment;

@end

/**
 * Fetches the raw value of a @c APBAccountV4GetAccountInfoRequest's @c commitment property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t APBAccountV4GetAccountInfoRequest_Commitment_RawValue(APBAccountV4GetAccountInfoRequest *message);
/**
 * Sets the raw value of an @c APBAccountV4GetAccountInfoRequest's @c commitment property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAPBAccountV4GetAccountInfoRequest_Commitment_RawValue(APBAccountV4GetAccountInfoRequest *message, int32_t value);

#pragma mark - APBAccountV4GetAccountInfoResponse

typedef GPB_ENUM(APBAccountV4GetAccountInfoResponse_FieldNumber) {
  APBAccountV4GetAccountInfoResponse_FieldNumber_Result = 1,
  APBAccountV4GetAccountInfoResponse_FieldNumber_AccountInfo = 2,
};

@interface APBAccountV4GetAccountInfoResponse : GPBMessage

@property(nonatomic, readwrite) APBAccountV4GetAccountInfoResponse_Result result;

/** Present iff result == Result::OK */
@property(nonatomic, readwrite, strong, null_resettable) APBAccountV4AccountInfo *accountInfo;
/** Test to see if @c accountInfo has been set. */
@property(nonatomic, readwrite) BOOL hasAccountInfo;

@end

/**
 * Fetches the raw value of a @c APBAccountV4GetAccountInfoResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t APBAccountV4GetAccountInfoResponse_Result_RawValue(APBAccountV4GetAccountInfoResponse *message);
/**
 * Sets the raw value of an @c APBAccountV4GetAccountInfoResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAPBAccountV4GetAccountInfoResponse_Result_RawValue(APBAccountV4GetAccountInfoResponse *message, int32_t value);

#pragma mark - APBAccountV4ResolveTokenAccountsRequest

typedef GPB_ENUM(APBAccountV4ResolveTokenAccountsRequest_FieldNumber) {
  APBAccountV4ResolveTokenAccountsRequest_FieldNumber_AccountId = 1,
  APBAccountV4ResolveTokenAccountsRequest_FieldNumber_IncludeAccountInfo = 2,
};

@interface APBAccountV4ResolveTokenAccountsRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) APBCommonV4SolanaAccountId *accountId;
/** Test to see if @c accountId has been set. */
@property(nonatomic, readwrite) BOOL hasAccountId;

/**
 * Specifies whether or not detailed account info for each token account should
 * be returned. This should only be specified if needed, as it requires extra
 * lookups.
 **/
@property(nonatomic, readwrite) BOOL includeAccountInfo;

@end

#pragma mark - APBAccountV4ResolveTokenAccountsResponse

typedef GPB_ENUM(APBAccountV4ResolveTokenAccountsResponse_FieldNumber) {
  APBAccountV4ResolveTokenAccountsResponse_FieldNumber_TokenAccountsArray = 1,
  APBAccountV4ResolveTokenAccountsResponse_FieldNumber_TokenAccountInfosArray = 2,
};

@interface APBAccountV4ResolveTokenAccountsResponse : GPBMessage

/**
 * Zero or more accounts that are owned by the provided account id.
 *
 * If the provided account is also a token account, it will be first in the list.
 * Otherwise, the list order should not be depended on, as there is no reliable way
 * to sort accounts based on creation time.
 *
 * Deprecated in favour of token_account_infos.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<APBCommonV4SolanaAccountId*> *tokenAccountsArray GPB_DEPRECATED_MSG("kin.agora.account.v4.ResolveTokenAccountsResponse.token_accounts is deprecated (see account/v4/account_service.proto).");
/** The number of items in @c tokenAccountsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tokenAccountsArray_Count GPB_DEPRECATED_MSG("kin.agora.account.v4.ResolveTokenAccountsResponse.token_accounts is deprecated (see account/v4/account_service.proto).");

/**
 * Zero or more account infos that are owned by the provided account id.
 *
 * In the case where include_account_info is false, token_account_infos will
 * still be provided. However, they will not include any data requiring account
 * lookups. That is, only account_id and owner will be set.
 *
 * Note: the ordering of token_account_infos is identical to token_accounts.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<APBAccountV4AccountInfo*> *tokenAccountInfosArray;
/** The number of items in @c tokenAccountInfosArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tokenAccountInfosArray_Count;

@end

#pragma mark - APBAccountV4GetEventsRequest

typedef GPB_ENUM(APBAccountV4GetEventsRequest_FieldNumber) {
  APBAccountV4GetEventsRequest_FieldNumber_AccountId = 1,
};

@interface APBAccountV4GetEventsRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) APBCommonV4SolanaAccountId *accountId;
/** Test to see if @c accountId has been set. */
@property(nonatomic, readwrite) BOOL hasAccountId;

@end

#pragma mark - APBAccountV4Events

typedef GPB_ENUM(APBAccountV4Events_FieldNumber) {
  APBAccountV4Events_FieldNumber_Result = 1,
  APBAccountV4Events_FieldNumber_EventsArray = 2,
};

@interface APBAccountV4Events : GPBMessage

@property(nonatomic, readwrite) APBAccountV4Events_Result result;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<APBAccountV4Event*> *eventsArray;
/** The number of items in @c eventsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger eventsArray_Count;

@end

/**
 * Fetches the raw value of a @c APBAccountV4Events's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t APBAccountV4Events_Result_RawValue(APBAccountV4Events *message);
/**
 * Sets the raw value of an @c APBAccountV4Events's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAPBAccountV4Events_Result_RawValue(APBAccountV4Events *message, int32_t value);

#pragma mark - APBAccountV4Event

typedef GPB_ENUM(APBAccountV4Event_FieldNumber) {
  APBAccountV4Event_FieldNumber_AccountUpdateEvent = 1,
  APBAccountV4Event_FieldNumber_TransactionEvent = 2,
};

typedef GPB_ENUM(APBAccountV4Event_Type_OneOfCase) {
  APBAccountV4Event_Type_OneOfCase_GPBUnsetOneOfCase = 0,
  APBAccountV4Event_Type_OneOfCase_AccountUpdateEvent = 1,
  APBAccountV4Event_Type_OneOfCase_TransactionEvent = 2,
};

@interface APBAccountV4Event : GPBMessage

@property(nonatomic, readonly) APBAccountV4Event_Type_OneOfCase typeOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) APBAccountV4AccountUpdateEvent *accountUpdateEvent;

@property(nonatomic, readwrite, strong, null_resettable) APBAccountV4TransactionEvent *transactionEvent;

@end

/**
 * Clears whatever value was set for the oneof 'type'.
 **/
void APBAccountV4Event_ClearTypeOneOfCase(APBAccountV4Event *message);

#pragma mark - APBAccountV4AccountUpdateEvent

typedef GPB_ENUM(APBAccountV4AccountUpdateEvent_FieldNumber) {
  APBAccountV4AccountUpdateEvent_FieldNumber_AccountInfo = 1,
};

/**
 * An event that gets sent when an account's information has changed.
 **/
@interface APBAccountV4AccountUpdateEvent : GPBMessage

/** The account information most recently obtained by the service. */
@property(nonatomic, readwrite, strong, null_resettable) APBAccountV4AccountInfo *accountInfo;
/** Test to see if @c accountInfo has been set. */
@property(nonatomic, readwrite) BOOL hasAccountInfo;

@end

#pragma mark - APBAccountV4TransactionEvent

typedef GPB_ENUM(APBAccountV4TransactionEvent_FieldNumber) {
  APBAccountV4TransactionEvent_FieldNumber_Transaction = 1,
  APBAccountV4TransactionEvent_FieldNumber_TransactionError = 2,
};

/**
 * An event that gets sent when a transaction related to an account has been
 * successfully submitted to the blockchain.
 **/
@interface APBAccountV4TransactionEvent : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) APBCommonV4Transaction *transaction;
/** Test to see if @c transaction has been set. */
@property(nonatomic, readwrite) BOOL hasTransaction;

@property(nonatomic, readwrite, strong, null_resettable) APBCommonV4TransactionError *transactionError;
/** Test to see if @c transactionError has been set. */
@property(nonatomic, readwrite) BOOL hasTransactionError;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
