version: 2.0
references:
  ## Workspaces
#  workspace: &workspace
#    /Users/distiller/project

  ## Image configurations
  image_config: &image_config
#    working_directory: *workspace
    macos:
      xcode: "13.0"
    environment:
      FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 60
#    shell: /bin/bash --login -o pipefail

  ## Ruby/Fastlane
  gems_key: &gems_key
    gems-{{ checksum "Gemfile.lock" }}

  restore_gems_cache: &restore_gems_cache
    restore_cache:
      key: *gems_key

  save_gems_cache: &save_gems_cache
    save_cache:
      key: *gems_key
      paths:
        - /Users/distiller/vendor/bundle

    ## Dependencies
  ruby_dependencies: &ruby_dependencies
    run:
      name: Download Ruby Dependencies
      command: bundle check || bundle install --path ~/vendor/bundle

jobs:
  build:
    <<: *image_config
    steps:
      - checkout
      - *restore_gems_cache
      - *ruby_dependencies
      - *save_gems_cache

      # Install CocoaPods
      - run:
          name: Install CocoaPods
          command: pod install


      # When adding a new target to test, make sure you open up the scheme management page for the target scheme.
      # Xcode does NOT generate a Target.xcscheme file in xcschemes until you do so, and it's needed for Circle.
      
      # Build KinBase and run tests
      - run:
          name: Build and run tests for KinBase
          command: fastlane scan
          environment:
            SCAN_DEVICE: iPhone 11
            SCAN_SCHEME: KinBase

      - run:
          name: Code Coverage
          command: |
            bundle exec slather
            bash <(curl -s https://codecov.io/bash) -f coverage/cobertura.xml -X coveragepy -X gcov -X xcode

      # Collect XML test results data to show in the UI,
      # and save the same XML files under test-results folder
      # in the Artifacts tab
      - store_test_results:
          path: test_output/report.xml
      - store_artifacts:
          path: /tmp/test-results
          destination: scan-test-results
      - store_artifacts:
          path: ~/Library/Logs/scan
          destination: scan-logs

